@using StudentsFeeSystem.ViewModel
@model ItemListViewModel

@{
    ViewData["Title"] = "Select Payment Items";
}
<partial name="~/Views/Shared/Common/_TitleNavigationBarPartial.cshtml" model='("Select Payment Items", "/", "Home", "Select Payment Items")'></partial>

@using (Html.BeginForm("MakePayment", "Student", FormMethod.Post, new { @class = "mt-4" }))
{
    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

    <input type="hidden" name="StudentId" value="@ViewBag.StudentId" />

    <div class="card shadow-sm mb-4 p-4">
        <h4 class="text-primary d-flex justify-content-between align-items-center">
            Total Amount
            <span id="totalAmount" class="badge bg-success fs-6">Tk 0</span>
        </h4>
    </div>

    <div class="card shadow-sm p-4">
        <h4 class="mb-4 text-primary">Select Payment Items</h4>

        <div class="mb-3">
            <button type="button" class="btn btn-info me-2" id="selectAllBtn" style="padding: 5px 10px;">Select All</button>
            <button type="button" class="btn btn-warning" id="deselectAllBtn" style="padding: 5px 10px;">Deselect All</button>
        </div>

        <div class="list-group mb-3">
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                <div class="list-group-item d-flex align-items-center justify-content-between">
                    <div class="form-check">
                        @Html.CheckBoxFor(m => m.Items[i].IsSelected, new
                            {
                                @class = "form-check-input item-checkbox",
                                id = $"item_{i}",
                                data_value = Model.Items[i].Value
                            })
                        <label class="form-check-label" for="item_@i">
                            @Model.Items[i].Name - <strong>@Model.Items[i].Value</strong> Tk
                        </label>
                    </div>

                    @Html.HiddenFor(m => m.Items[i].Id)
                    @Html.HiddenFor(m => m.Items[i].Name)
                    @Html.HiddenFor(m => m.Items[i].Value)
                </div>
            }
        </div>

        <button type="submit" class="btn btn-success w-100">Submit</button>
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        function updateTotalAmount() {
            let totalAmount = 0;

            // Iterate over all checkboxes
            $('.form-check-input').each(function () {
                if ($(this).is(':checked')) {
                    const value = parseFloat($(this).data('value')) || 0;
                    totalAmount += value;
                }
            });

            // Update the total amount display
            $('#totalAmount').text('Tk ' + totalAmount.toFixed(2));
        }

        // Initialize the checkboxes and total amount when page loads
        $('.form-check-input').change(function () {
            updateTotalAmount();
        });

        // Select All Button
        $('#selectAllBtn').click(function () {
            $('.form-check-input').prop('checked', true);
            updateTotalAmount();
        });

        // Deselect All Button
        $('#deselectAllBtn').click(function () {
            $('.form-check-input').prop('checked', false);
            updateTotalAmount();
        });

        // Call updateTotalAmount once on page load to set initial total
        updateTotalAmount();
    });
</script>
